import streamlit as st
import pytesseract
from PIL import Image
from deep_translator import GoogleTranslator
import numpy as np
import cv2
from gtts import gTTS
import io

st.set_page_config(page_title="Word-by-Word & Sentence Translator with Voice", layout="centered")
st.title("üìò ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏õ‡∏•‡∏®‡∏±‡∏û‡∏ó‡πå + ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ + ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡πà‡∏≤‡∏ô")

uploaded_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©", type=["jpg", "jpeg", "png"])

if uploaded_file:
    # ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û
    image = Image.open(uploaded_file)
    st.image(image, caption='üì∑ ‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö', use_container_width=True)

    # üîç Preprocess
    img_cv = np.array(image)
    img_gray = cv2.cvtColor(img_cv, cv2.COLOR_RGB2GRAY)
    _, img_thresh = cv2.threshold(img_gray, 150, 255, cv2.THRESH_BINARY)

    # üß† OCR
    text = pytesseract.image_to_string(img_thresh, lang='eng')
    st.subheader("üß† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û")
    st.text_area("üìã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° OCR", value=text, height=200)

    # üéß ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    if st.button("üîä ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©"):
        tts_en = gTTS(text, lang='en')
        en_audio = io.BytesIO()
        tts_en.write_to_fp(en_audio)
        st.audio(en_audio, format='audio/mp3')

    # ‚úÖ ‡πÅ‡∏õ‡∏•‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå
    lines = text.splitlines()
    words = []
    for line in lines:
        words += line.strip().split()

    st.subheader("üî† ‡πÅ‡∏õ‡∏•‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡∏•‡∏∞‡∏Ñ‡∏≥ (Word-by-word)")
    table_data = []
    for word in words:
        try:
            translated = GoogleTranslator(source='en', target='th').translate(word)
        except:
            translated = "-"
        table_data.append((word, translated))

    st.write("| ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©) | ‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏• (‡πÑ‡∏ó‡∏¢) |")
    st.write("|-------------------|--------------|")
    for eng, th in table_data:
        st.write(f"| {eng} | {th} |")

    # ‚úÖ ‡πÅ‡∏õ‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ
    st.subheader("üìù ‡πÅ‡∏õ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÄ‡∏ï‡πá‡∏°")
    try:
        full_translation = GoogleTranslator(source='en', target='th').translate(text)
        st.success(full_translation)

        # üéß ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏õ‡∏•‡πÑ‡∏ó‡∏¢
        if st.button("üîä ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"):
            tts_th = gTTS(full_translation, lang='th')
            th_audio = io.BytesIO()
            tts_th.write_to_fp(th_audio)
            st.audio(th_audio, format='audio/mp3')

    except Exception as e:
        st.error("‚ö†Ô∏è ‡πÅ‡∏õ‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: " + str(e))