import streamlit as st
import pytesseract
from PIL import Image
from deep_translator import GoogleTranslator
from gtts import gTTS
import io
import firebase_admin
from firebase_admin import credentials, db
import json

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(page_title="üìò Word & Sentence Translator", layout="centered")
st.title("üìò ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏õ‡∏•‡∏®‡∏±‡∏û‡∏ó‡πå + ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ + ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡πà‡∏≤‡∏ô")

# ‚úÖ Firebase Init ‡∏à‡∏≤‡∏Å st.secrets
def init_firebase():
    if not firebase_admin._apps:
        firebase_config = {
            "type": st.secrets["FIREBASE"]["type"],
            "project_id": st.secrets["FIREBASE"]["project_id"],
            "private_key_id": st.secrets["FIREBASE"]["private_key_id"],
            "private_key": st.secrets["FIREBASE"]["private_key"],  # ‚ùå ‡πÄ‡∏≠‡∏≤ .replace(...) ‡∏≠‡∏≠‡∏Å
            "client_email": st.secrets["FIREBASE"]["client_email"],
            "client_id": st.secrets["FIREBASE"]["client_id"],
            "auth_uri": st.secrets["FIREBASE"]["auth_uri"],
            "token_uri": st.secrets["FIREBASE"]["token_uri"],
            "auth_provider_x509_cert_url": st.secrets["FIREBASE"]["auth_provider_x509_cert_url"],
            "client_x509_cert_url": st.secrets["FIREBASE"]["client_x509_cert_url"]
        }
        cred = credentials.Certificate(firebase_config)
        firebase_admin.initialize_app(cred, {
            'databaseURL': 'https://vocab-tracker-7e059-default-rtdb.asia-southeast1.firebasedatabase.app/'
        })

# ‚úÖ Save to Firebase
def save_to_firebase(data):
    init_firebase()
    ref = db.reference('vocabulary')
    for word, translation in data:
        ref.push({
            "english": word,
            "thai": translation
        })

# ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û
uploaded_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©", type=["jpg", "jpeg", "png"])
table_data = []

if uploaded_file:
    image = Image.open(uploaded_file)
    st.image(image, caption='üì∑ ‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö', use_container_width=True)

    gray_image = image.convert('L')
    text = pytesseract.image_to_string(gray_image, lang='eng').strip()
    st.subheader("üß† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û (OCR)")
    st.text_area("üìã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° OCR", value=text, height=200)

    if text:
        if st.button("üîä ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©"):
            tts_en = gTTS(text, lang='en')
            en_audio = io.BytesIO()
            tts_en.write_to_fp(en_audio)
            en_audio.seek(0)
            st.audio(en_audio, format='audio/mp3')

        st.subheader("üî† ‡πÅ‡∏õ‡∏•‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå (Word-by-word)")
        words = [word for line in text.splitlines() for word in line.strip().split()]
        for word in words:
            try:
                translated = GoogleTranslator(source='en', target='th').translate(word)
            except:
                translated = "-"
            table_data.append((word, translated))

        # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå
        if table_data:
            st.write(f"üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(table_data)} ‡∏Ñ‡∏≥")
            st.write("| ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©) | ‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏• (‡πÑ‡∏ó‡∏¢) |")
            st.write("|-------------------|--------------|")
            for eng, th in table_data:
                st.write(f"| {eng} | {th} |")

        # ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡πÅ‡∏™‡∏î‡∏á *‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå*
        if table_data and st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firebase"):
            save_to_firebase(table_data)
            st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firebase ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

        # ‚úÖ ‡πÅ‡∏õ‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ
        st.subheader("üìù ‡πÅ‡∏õ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÄ‡∏ï‡πá‡∏°")
        try:
            full_translation = GoogleTranslator(source='en', target='th').translate(text)
            st.success(full_translation)

            if st.button("üîä ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"):
                tts_th = gTTS(full_translation, lang='th')
                th_audio = io.BytesIO()
                tts_th.write_to_fp(th_audio)
                th_audio.seek(0)
                st.audio(th_audio, format='audio/mp3')

        except Exception as e:
            st.error("‚ö†Ô∏è ‡πÅ‡∏õ‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: " + str(e))

    else:
        st.warning("üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô")